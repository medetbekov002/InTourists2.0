package com.dev.intourist.data.remote.dtos.toursimport com.dev.intourist.data.local.mapper.DataMapperimport com.dev.intourist.domain.model.tours.ToursDetailModelimport com.dev.intourist.domain.model.tours.ToursFavoriteModelimport com.dev.intourist.domain.model.tours.ToursModelimport com.dev.intourist.domain.model.tours.ServicesModelimport com.dev.intourist.domain.model.tours.CompanyPackageModelimport com.dev.intourist.domain.model.tours.GalleryModelimport com.google.gson.annotations.SerializedNamedata class CompanyDto(    @SerializedName("id")    val id: Int,    @SerializedName("image")    val image: String,    @SerializedName("title")    val title: String,    @SerializedName("summary")    val summary: String,    @SerializedName("views")    val views: Int,    @SerializedName("rating")    val rating: Double,    @SerializedName("count_reviews")    val countReviews: Int) : DataMapper<ToursModel> {    override fun toDomain() = ToursModel(        id = id,        image = image,        title = title,        summary = summary,        views = views,        rating = rating,        countReviews = countReviews,        packages = emptyList(),  // Pass an empty list as the default value        services = emptyList()   // Pass an empty list as the default value    )}data class CompanyDetailDto(    @SerializedName("site_link")    val siteLink: String,    @SerializedName("image")    val image: String,    @SerializedName("title")    val title: String,    @SerializedName("summary")    val summary: String,    @SerializedName("about")    val about: String,    @SerializedName("rating")    val rating: Double,    @SerializedName("count_reviews")    val countReviews: String,    @SerializedName("phone_number_1")    val phoneNumber1: String,    @SerializedName("email_1")    val email1: String,    @SerializedName("social_media_1")    val socialMedia1: String,    @SerializedName("address")    val address: String) : DataMapper<ToursDetailModel> {    override fun toDomain() = ToursDetailModel(        siteLink = siteLink,        image = image,        title = title,        summary = summary,        about = about,        rating = rating,        countReviews = countReviews,        phoneNumber1 = phoneNumber1,        email1 = email1,        socialMedia1 = socialMedia1,        address = address,        services = emptyList(),  // Pass an empty list as the default value        gallery = emptyList(),   // Pass an empty list as the default value        packages = emptyList()   // Pass an empty list as the default value    )}data class ToursFavoriteDto(    @SerializedName("company_id")    val companyId: Int)fun ToursFavoriteModel.toData() = ToursFavoriteDto(    companyId = favoriteId)