package com.dev.intourist.data.remote.serviceimport androidx.lifecycle.LiveDataimport com.dev.intourist.data.base.BaseMainResponseimport com.dev.intourist.data.remote.model.contacts.ContactModelimport com.dev.intourist.data.remote.dtos.favorite.FavoriteItemDtoimport com.dev.intourist.data.remote.dtos.tours.ToursModel//import com.example.stylescope.data.remote.dtos.company.CompanyFavoriteDto//import com.example.stylescope.data.remote.dtos.confirm.ConfirmAnswerDto//import com.example.stylescope.data.remote.dtos.confirm.ConfirmDto//import com.example.stylescope.data.remote.dtos.confirm.ResendConfirmDto//import com.example.stylescope.data.remote.dtos.favorite.FavoriteItemDto//import com.example.stylescope.data.remote.dtos.recover.RecoverDto//import com.example.stylescope.data.remote.dtos.token.*import retrofit2.http.*//import com.example.stylescope.data.remote.dtos.user.UserValidateDtoimport okhttp3.MultipartBodyimport retrofit2.http.Bodyimport retrofit2.http.GETimport retrofit2.http.POSTimport retrofit2.http.Pathinterface ApiService {    @GET("users/favorite/")    suspend fun getFavorite(): BaseMainResponse<FavoriteItemDto>    @GET("/api/v1/tour/Tour/")    suspend fun getToursByFilters(        @Query("category") category: Int?,        @Query("difficulty") difficulty: List<Int>?,        @Query("duration") duration: List<Int>?,        @Query("order_by_price") orderByPrice: String?,        @Query("page_size") pageSize: Int?,        @Query("price_max") priceMax: String?,        @Query("price_min") priceMin: String?,        @Query("search") search: String?,        @Query("tags") tags: List<Int>?    ): BaseMainResponse<ToursModel>    @GET("/api/v1/tour/Tour/")    suspend fun getAllTours(@Query("page_size") pageSize: Int = 1): ToursModel    @GET("/api/v1/tour/Tour/{id}")    suspend fun getTourById(@Path("id") id: Int): ToursModel.Result    @GET("/api/v1/promo/promos/")    suspend fun getAllPromos(): ToursModel.Result    @GET("/api/v1/contacts/contacts/")    suspend fun getContacts(): ContactModel//    @POST("token/")//    suspend fun getToken(//        @Body body:GetTokenDto//    ):GetTokenAnswerDto//    @POST("token/refresh/")//    suspend fun refreshToken(//        @Body body:RefreshTokenDto//    ):RefreshTokenAnswerDto//    @POST("token/verify/")//    suspend fun verifyToken(//        @Body body: VerifyTokenDto//    ):VerifyTokenAnswerDto//    @GET("tours/{id}")//    suspend fun getDetailTours(@Path("id")id: Int): ToursDetailDto////    @POST("users/confirm/")//    suspend fun confirm(//        @Body code:ConfirmDto//    ):ConfirmAnswerDto//    @POST("users/resend_confirm_code/")//    suspend fun resendConfirm(//        @Body userName: ResendConfirmDto//    ):List<String>//    @POST("users/resend_reset_code/")//    suspend fun resendRecover(//        @Body email: RecoverDto//    ):List<String>////    @GET("users/profile/")//    suspend fun getUserProfile(): UserValidateDto////    @POST("companies/{id}/favorite/")//    suspend fun addFavoriteCompany(//        @Body model: CompanyFavoriteDto,//        @Path("id") id: String//    ): List<String>//    @POST("designers/{id}/favorite/")//    suspend fun addFavoriteDesigner(//        @Body model: DesignerFavoriteDto,//        @Path("id") id: String//    ): List<String>}